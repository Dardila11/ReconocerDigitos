/*
 * DigitGUI.java
 *
 * Created on May 24, 2007, 10:18 PM
 */

package gui;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.TableColumn;
import kb.KnowledgeBase;
import nn.BackPropagationNN;
import nn.TestSet;

/**
 *
 * @author  tomaszgebarowski
 */
public class DigitGUI extends javax.swing.JFrame implements ChangeListener {
    
    private int totalSteps = 10000;
    private BackPropagationNN nn;
    private KnowledgeBase kb;
    
    private boolean reset;
    
    /** Creates new form DigitGUI */
    public DigitGUI() {
        initComponents();
        
        // Set Progress Bar properties
        progressBar.setMinimum(0);
        progressBar.setMaximum(100);
        progressBar.setStringPainted(true);
        
        reset = true;
        
        for ( int icol = 0; icol < 5; icol++ ) {
            TableColumn col = this.testDataTable.getColumnModel().getColumn(icol);
            col.setCellRenderer(new CellRenderer());
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        tabbedPane = new javax.swing.JTabbedPane();
        trainingPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        startTrainingButton = new javax.swing.JButton();
        testPanel = new javax.swing.JPanel();
        testDataPane = new javax.swing.JScrollPane();
        testDataTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        recognizedDigit = new javax.swing.JLabel();
        recognizeButton = new javax.swing.JButton();
        selfTeacherPanel = new javax.swing.JPanel();
        caseDataTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        suggestedOutput = new javax.swing.JComboBox();
        addTestCaseButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        numberOfCasesLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jLabel1.setText("Number of training symbols:");

        jLabel2.setText("Number of iterations:");

        jLabel3.setText("Number of hidden layers:");

        startTrainingButton.setText("Start");
        startTrainingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startTrainingButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout trainingPanelLayout = new org.jdesktop.layout.GroupLayout(trainingPanel);
        trainingPanel.setLayout(trainingPanelLayout);
        trainingPanelLayout.setHorizontalGroup(
            trainingPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(trainingPanelLayout.createSequentialGroup()
                .add(trainingPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(trainingPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(trainingPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(jLabel2)
                            .add(jLabel3)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, trainingPanelLayout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(progressBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE))
                    .add(trainingPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(startTrainingButton)))
                .addContainerGap())
        );
        trainingPanelLayout.setVerticalGroup(
            trainingPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(trainingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 70, Short.MAX_VALUE)
                .add(startTrainingButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(progressBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        tabbedPane.addTab("Trainer", trainingPanel);

        testDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {new Boolean(false), new Boolean(false), null, null, new Boolean(false)},
                {null, null, null, null, new Boolean(false)},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        testDataPane.setViewportView(testDataTable);

        jLabel4.setText("Recognized Digit:");

        recognizedDigit.setFont(new java.awt.Font("Arial Narrow", 0, 48));
        recognizedDigit.setText("?");

        recognizeButton.setText("Recognize");
        recognizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recognizeButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout testPanelLayout = new org.jdesktop.layout.GroupLayout(testPanel);
        testPanel.setLayout(testPanelLayout);
        testPanelLayout.setHorizontalGroup(
            testPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(testPanelLayout.createSequentialGroup()
                .add(20, 20, 20)
                .add(testDataPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(55, 55, 55)
                .add(recognizeButton)
                .add(61, 61, 61)
                .add(testPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(recognizedDigit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 74, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .add(187, 187, 187))
        );
        testPanelLayout.setVerticalGroup(
            testPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(testPanelLayout.createSequentialGroup()
                .add(20, 20, 20)
                .add(testPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(testDataPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(testPanelLayout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(testPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(recognizeButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(recognizedDigit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        tabbedPane.addTab("Test ( Drawing )", testPanel);

        caseDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {new Boolean(false), new Boolean(false), null, null, new Boolean(false)},
                {null, null, null, null, new Boolean(false)},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });

        jLabel5.setText("New Test Case:");

        jLabel6.setText("Suggested output:");

        suggestedOutput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15" }));

        addTestCaseButton.setText("Add Case");
        addTestCaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTestCaseButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Number of test cases:");

        numberOfCasesLabel.setText("0");

        org.jdesktop.layout.GroupLayout selfTeacherPanelLayout = new org.jdesktop.layout.GroupLayout(selfTeacherPanel);
        selfTeacherPanel.setLayout(selfTeacherPanelLayout);
        selfTeacherPanelLayout.setHorizontalGroup(
            selfTeacherPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(selfTeacherPanelLayout.createSequentialGroup()
                .add(22, 22, 22)
                .add(selfTeacherPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel5)
                    .add(caseDataTable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(68, 68, 68)
                .add(selfTeacherPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel6)
                    .add(selfTeacherPanelLayout.createSequentialGroup()
                        .add(selfTeacherPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(selfTeacherPanelLayout.createSequentialGroup()
                                .add(jLabel7)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(numberOfCasesLabel))
                            .add(suggestedOutput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 163, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(28, 28, 28)
                        .add(selfTeacherPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(resetButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .add(addTestCaseButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))))
                .addContainerGap(118, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        selfTeacherPanelLayout.setVerticalGroup(
            selfTeacherPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(selfTeacherPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(selfTeacherPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(selfTeacherPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(selfTeacherPanelLayout.createSequentialGroup()
                        .add(selfTeacherPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(suggestedOutput, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(addTestCaseButton))
                        .add(17, 17, 17)
                        .add(selfTeacherPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel7)
                            .add(numberOfCasesLabel)
                            .add(resetButton)))
                    .add(caseDataTable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(72, 72, 72))
        );
        tabbedPane.addTab("Add New Case", selfTeacherPanel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(tabbedPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(tabbedPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        
        reset = true;
        numberOfCasesLabel.setText("0");
    }//GEN-LAST:event_resetButtonActionPerformed

    private void addTestCaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTestCaseButtonActionPerformed

        double[] inputs = new double[kb.getNumberOfInputs()];

        int pos = 0;       
        
        for ( int irow = 0; irow < 7; irow++ ) {
            for ( int icol = 0; icol < 5; icol++ ) {              
                Boolean value = (Boolean)this.caseDataTable.getModel().getValueAt(irow,icol);
                boolean val = value.booleanValue();
                inputs[pos] = getDouble( val);
                pos++;
            }
        }
        
        double[] outputs = kb.binaryDigit( suggestedOutput.getName() );            
        nn.addCase(inputs, outputs);
        
        numberOfCasesLabel.setText( String.valueOf( nn.getNumberOfTestCases() + 1 ) );

    }//GEN-LAST:event_addTestCaseButtonActionPerformed

    private void recognizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recognizeButtonActionPerformed
        
        double[] inputs = new double[kb.getNumberOfInputs()];

        int pos = 0;
       
        
        for ( int irow = 0; irow < 7; irow++ ) {
            for ( int icol = 0; icol < 5; icol++ ) {              
                Boolean value = (Boolean)this.testDataTable.getModel().getValueAt(irow,icol);
                boolean val = value.booleanValue();
                inputs[pos] = getDouble( val);
                pos++;
            }
        }
        
        
        nn.processForward(inputs);

       //for ( int i = 0; i < 4; i++)
       //    System.out.println( nn.outputs[i] );
        
       this.recognizedDigit.setText( String.valueOf(  getDigit( nn.outputs ) ) );
        
    }//GEN-LAST:event_recognizeButtonActionPerformed

    private void startTrainingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startTrainingButtonActionPerformed

        if ( reset ) {
            kb = new KnowledgeBase();
            kb.load();

            nn = new BackPropagationNN(kb.getNumberOfInputs(), kb.getNumberOfInputs(), kb.getNumberOfOutputs());
            nn.addChangeListener(this);
            nn.addTest(totalSteps, kb.getKB() );
            reset = false;
        }
        
            Thread t = new  Thread(nn);
            t.start();  

            numberOfCasesLabel.setText(String.valueOf( nn.getNumberOfTestCases() ) );

        
    }//GEN-LAST:event_startTrainingButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DigitGUI().setVisible(true);
            }
        });
    }
    
    
    /* Handle State Changed Event used for changing progress bar */
    public void stateChanged( ChangeEvent e ) {      
        int progress = (int) ( ( ( 1.0 * ( nn.currentStep + 2 ) / totalSteps ) ) * 100.0 ) ;
        
        progressBar.setValue( progress );
        progressBar.setString( String.valueOf( progress ) + "%" );
    }     
    
    public double getDouble(boolean value ) {
        if ( value )
            return 1.0;
        
        return 0.0;
    }
    
    
    public int getDigit( double [] outputs ) {
        
        int value = 0;
        
        for ( int i = 0; i < 4; i++ ) {
            value += Math.round(outputs[i]) * Math.pow(2, i);
        }
        
        return value;
    }
  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTestCaseButton;
    private javax.swing.JTable caseDataTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel numberOfCasesLabel;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton recognizeButton;
    private javax.swing.JLabel recognizedDigit;
    private javax.swing.JButton resetButton;
    private javax.swing.JPanel selfTeacherPanel;
    private javax.swing.JButton startTrainingButton;
    private javax.swing.JComboBox suggestedOutput;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JScrollPane testDataPane;
    private javax.swing.JTable testDataTable;
    private javax.swing.JPanel testPanel;
    private javax.swing.JPanel trainingPanel;
    // End of variables declaration//GEN-END:variables
    
}
